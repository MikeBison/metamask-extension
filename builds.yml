# TODO(ritave): 添加对环境的支持 (<root>/development/build/constants.js:@ENVIRONMENT)
# TODO(ritave): 添加对构建目标的支持 (<root>/development/build/constants.js:@BUILD_TARGETS)
# TODO(ritave): 警告如果并非所有声明的变量都已被定义/使用

# 变量定义的优先级顺序（从最重要到最不重要）：
# <硬编码构建代码>; <环境变量>; .metamaskprodrc; .metamaskrc; builds.yml:.buildTypes.<type>.env; builds.yml:.features.<feature>.env; builds.yml:.env

# 当命令行中未提供构建类型时使用的默认构建类型
default: &default main

# 构建类型声明
# 每种构建类型由特性、环境变量和资源组成
# 类似于 Android 开发中的 productFlavors 概念
# 注意：这些构建类型应与 `.github/workflows/update-lavamoat-policies.yml` 中的列表保持同步
buildTypes:
  main:
    id: 10
    features:
      - build-main
      - keyring-snaps
      - multi-srp
    # 特定于此构建的额外环境变量
    env:
      - INFURA_PROD_PROJECT_ID
      - SEGMENT_PROD_WRITE_KEY
      - INFURA_ENV_KEY_REF: INFURA_PROD_PROJECT_ID
      - SEGMENT_WRITE_KEY_REF: SEGMENT_PROD_WRITE_KEY
      - ALLOW_LOCAL_SNAPS: false
      - REQUIRE_SNAPS_ALLOWLIST: true
      - REJECT_INVALID_SNAPS_PLATFORM_VERSION: true
      - IFRAME_EXECUTION_ENVIRONMENT_URL: https://execution.metamask.io/iframe/7.2.0/index.html
      - ACCOUNT_SNAPS_DIRECTORY_URL: https://snaps.metamask.io/account-management
      - EVM_MULTICHAIN_ENABLED: false
    # 主构建使用默认的浏览器清单
    manifestOverrides: false
    # 在多个用户可读的地方使用的构建名称
    # 例如 eip6963
    buildNameOverride: MetaMask

  beta:
    id: 11
    features:
      - build-beta
      - keyring-snaps
      - multichain
      - solana
      - solana-swaps
      - multi-srp
    env:
      - INFURA_BETA_PROJECT_ID
      - SEGMENT_BETA_WRITE_KEY
      - INFURA_ENV_KEY_REF: INFURA_BETA_PROJECT_ID
      - SEGMENT_WRITE_KEY_REF: SEGMENT_BETA_WRITE_KEY
      - SUPPORT_LINK: https://intercom.help/internal-beta-testing/
      - SUPPORT_REQUEST_LINK: https://intercom.help/internal-beta-testing/
      - ALLOW_LOCAL_SNAPS: false
      - REQUIRE_SNAPS_ALLOWLIST: true
      - REJECT_INVALID_SNAPS_PLATFORM_VERSION: true
      - IFRAME_EXECUTION_ENVIRONMENT_URL: https://execution.metamask.io/iframe/7.2.0/index.html
      - ACCOUNT_SNAPS_DIRECTORY_URL: https://snaps.metamask.io/account-management
      - MULTICHAIN_API: true
    # 修改版本的显示方式
    # 例如，不是显示 10.25.0 而是显示 10.25.0-beta.2
    isPrerelease: true
    # 包含浏览器清单覆盖的文件夹
    manifestOverrides: ./app/build-types/beta/manifest/
    buildNameOverride: MetaMask Beta

  flask:
    id: 15
    # 使用该特性的代码围栏包围的代码
    # 不会被移除
    features:
      - build-flask
      - keyring-snaps
      # - bitcoin
      - solana
      - multi-srp
      - solana-swaps
      - multichain
    env:
      - INFURA_FLASK_PROJECT_ID
      - SEGMENT_FLASK_WRITE_KEY
      - ALLOW_LOCAL_SNAPS: true
      - REQUIRE_SNAPS_ALLOWLIST: false
      - REJECT_INVALID_SNAPS_PLATFORM_VERSION: false
      - IFRAME_EXECUTION_ENVIRONMENT_URL: https://execution.metamask.io/iframe/7.2.0/index.html
      - SUPPORT_LINK: https://support.metamask.io/
      - SUPPORT_REQUEST_LINK: https://support.metamask.io/
      - INFURA_ENV_KEY_REF: INFURA_FLASK_PROJECT_ID
      - SEGMENT_WRITE_KEY_REF: SEGMENT_FLASK_WRITE_KEY
      - ACCOUNT_SNAPS_DIRECTORY_URL: https://metamask.github.io/snaps-directory-staging/main/account-management
      - EIP_4337_ENTRYPOINT: '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789'
      - MULTICHAIN_API: true
    isPrerelease: true
    manifestOverrides: ./app/build-types/flask/manifest/
    buildNameOverride: MetaMask Flask

  mmi:
    id: 20
    features:
      - build-mmi
    env:
      - INFURA_MMI_PROJECT_ID
      - SEGMENT_MMI_WRITE_KEY
      - SENTRY_MMI_DSN
      - INFURA_ENV_KEY_REF: INFURA_MMI_PROJECT_ID
      - SEGMENT_WRITE_KEY_REF: SEGMENT_MMI_WRITE_KEY
      - ALLOW_LOCAL_SNAPS: false
      - REQUIRE_SNAPS_ALLOWLIST: true
      - REJECT_INVALID_SNAPS_PLATFORM_VERSION: true
      - IFRAME_EXECUTION_ENVIRONMENT_URL: https://execution.metamask.io/iframe/7.2.0/index.html
      - MMI_CONFIGURATION_SERVICE_URL: https://configuration.metamask-institutional.io/v2/configuration/default
      - SUPPORT_LINK: https://support.metamask-institutional.io
      - SUPPORT_REQUEST_LINK: https://support.metamask-institutional.io
      - SENTRY_DSN: SENTRY_MMI_DSN
      - EVM_MULTICHAIN_ENABLED: false
    # 由于某种原因，MMI 使用这种版本控制方式
    # 为了向后兼容保留此设置
    isPrerelease: true
    manifestOverrides: ./app/build-types/mmi/manifest/
    buildNameOverride: MetaMask Institutional

# 构建类型由一组特性组成
# 每个特性可以有添加新代码的代码围栏
# 以及声明、定义和覆盖环境变量
features:
  ###
  # 构建类型代码扩展。例如不同的支持链接、警告页面、横幅等
  ###

  build-main:
  build-beta:
    assets:
      # 将被复制的资源
      - src: ./app/build-types/beta/images/
        dest: images
      # 仅在此特性中包含并在其他特性中忽略的资源
      # 支持通配符
      - ./{app,shared,ui}/**/beta/**
  build-mmi:
    assets:
      - src: ./app/build-types/mmi/images/
        dest: images
      - ./{app,shared,ui}/**/institutional/**
  build-flask:
    assets:
      - src: ./node_modules/@metamask/account-watcher/dist/preinstalled-snap.json
        dest: snaps/account-watcher.json
      - src: ./node_modules/@metamask/preinstalled-example-snap/dist/preinstalled-snap.json
        dest: snaps/preinstalled-example-snap.json
      - src: ./app/build-types/flask/images/
        dest: images
      - ./{app,shared,ui}/**/flask/**
  keyring-snaps:
    assets:
      - src: ./node_modules/@metamask/message-signing-snap/dist/preinstalled-snap.json
        dest: snaps/message-signing-snap.json
      - src: ./node_modules/@metamask/ens-resolver-snap/dist/preinstalled-snap.json
        dest: snaps/ens-resolver-snap.json
      - src: ./node_modules/@metamask/institutional-wallet-snap/dist/preinstalled-snap.json
        dest: snaps/institutional-wallet-snap.json
      - ./{app,shared,ui}/**/keyring-snaps/**
  bitcoin:
    assets:
      - src: ./node_modules/@metamask/bitcoin-wallet-snap/dist/preinstalled-snap.json
        dest: snaps/bitcoin-wallet-snap.json
  solana:
    assets:
      - src: ./node_modules/@metamask/solana-wallet-snap/dist/preinstalled-snap.json
        dest: snaps/solana-wallet-snap.json
  multi-srp:
    assets:
      # srp-list 是一个特殊情况，现在用于 srp 恢复流程
      - ./{app,shared,ui}/**/multi-srp/(?!.*srp-list)/**
  solana-swaps:
  multichain:

# 所有类型构建都需要的环境变量
#
# env 对象支持声明 (- FOO) 和定义 (- FOO: BAR)
# 被声明的变量必须在使用前在加载链中的某处被定义
env:
  - ACCOUNTS_USE_DEV_APIS: false
  - BRIDGE_USE_DEV_APIS: false
  - SWAPS_USE_DEV_APIS: false
  - PORTFOLIO_URL: https://portfolio.metamask.io
  - TOKEN_ALLOWANCE_IMPROVEMENTS: false
  - TRANSACTION_SECURITY_PROVIDER: false
  # 解锁密码
  - PASSWORD: null
  - TEST_SRP: null
  - WITH_STATE: null
  # 另见 METAMASK_DEBUG 和 NODE_DEBUG
  - DEBUG: null
  - SUPPORT_LINK: https://support.metamask.io
  - SUPPORT_REQUEST_LINK: https://support.metamask.io
  - SKIP_BACKGROUND_INITIALIZATION: false
  - PPOM_URI: ./ppom_bg.wasm
  # blockaid 文件的 CDN
  - BLOCKAID_FILE_CDN: static.cx.metamask.io/api/v1/confirmations/ppom
  # 用于验证从 CDN 下载的数据文件签名的 Blockaid 公钥
  - BLOCKAID_PUBLIC_KEY: 066ad3e8af5583385e312c156d238055215d5f25247c1e91055afa756cb98a88
  - REMOVE_GNS: ''

  - ENABLE_MV3: true
  # 这些仅用于 MV3（Manifest V3）
  - USE_SNOW
  - APPLY_LAVAMOAT
  - FILE_NAMES

  # 这个变量由 Trezor 的源代码读取，如果不包含则会导致构建失败
  - ASSET_PREFIX: null
  - SUITE_TYPE: null
  - COMMITHASH: null
  - VERSION: null
  - IS_CODESIGN_BUILD: null

  - SENTRY_MMI_DSN: ''

  ###
  # Storybook
  ###
  - STORYBOOK: false
  - INFURA_STORYBOOK_PROJECT_ID

  ###
  # 通知功能
  ###
  - AUTH_API: https://authentication.api.cx.metamask.io
  - OIDC_API: https://oidc.api.cx.metamask.io
  - OIDC_CLIENT_ID: 1132f10a-b4e5-4390-a5f2-d9c6022db564
  - OIDC_GRANT_TYPE: urn:ietf:params:oauth:grant-type:jwt-bearer
  - USER_STORAGE_API: https://user-storage.api.cx.metamask.io
  - CONTENTFUL_ACCESS_SPACE_ID:
  - CONTENTFUL_ACCESS_TOKEN:
  - NOTIFICATIONS_SERVICE_URL: https://notification.api.cx.metamask.io
  - TRIGGERS_SERVICE_URL: https://trigger.api.cx.metamask.io
  - PUSH_NOTIFICATIONS_SERVICE_URL: https://push.api.cx.metamask.io
  - VAPID_KEY:
  - FIREBASE_API_KEY:
  - FIREBASE_AUTH_DOMAIN:
  - FIREBASE_STORAGE_BUCKET:
  - FIREBASE_PROJECT_ID:
  - FIREBASE_MESSAGING_SENDER_ID:
  - FIREBASE_APP_ID:
  - FIREBASE_MEASUREMENT_ID:
  - __FIREBASE_DEFAULTS__: null

  ###
  # 第三方服务的 API 密钥
  ###

  - SEGMENT_HOST: null
  - SENTRY_DSN: null
  - SENTRY_DSN_DEV: null
  # 另见下面的 INFURA_PROJECT_ID

  ###
  # 构建系统向后兼容性
  ###

  - INFURA_ENV_KEY_REF
  - SEGMENT_WRITE_KEY_REF

  ###
  # 通过硬编码代码修改的变量
  ###

  # 用于提供签名请求附加数据的解码 API 的 URL
  - DECODING_API_URL: 'https://signature-insights.api.cx.metamask.io/v1'
  # 确定是否应使用功能标记的设置页面 - 开发者选项
  - ENABLE_SETTINGS_PAGE_DEV_OPTIONS: false
  # 用于调试对钓鱼警告页面的更改
  # 在 <root>/development/build/scripts.js:@getPhishingWarningPageUrl 中修改
  - PHISHING_WARNING_PAGE_URL: null
  # 在 <root>/development/build/scripts.js:@getInfuraProjectId 中修改
  - INFURA_PROJECT_ID
  # 在 <root>/development/build/scripts.js:@getSegmentWriteKey 中修改
  - SEGMENT_WRITE_KEY: ''
  # 在 <root>/development/build/scripts.js:@getAnalyticsDataDeletionSourceId 中修改
  - ANALYTICS_DATA_DELETION_SOURCE_ID: null
  # 在 <root>/development/build/scripts.js:@getAnalyticsDataDeletionEndpoint 中修改
  - ANALYTICS_DATA_DELETION_ENDPOINT: null
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  # 另见 DEBUG 和 NODE_DEBUG
  - METAMASK_DEBUG: false
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - IN_TEST
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - METAMASK_ENVIRONMENT
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - METAMASK_VERSION
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - METAMASK_BUILD_TYPE
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - METAMASK_BUILD_NAME
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - METAMASK_BUILD_APP_ID
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - METAMASK_BUILD_ICON
  # 在 <root>/development/build/scripts.js:@setEnvironmentVariables 中修改
  - NODE_ENV
  # 由 node 本身定义
  # 为了构建系统的目的，如果它不在 process.env 中，我们将其定义为空
  # 另见 DEBUG 和 METAMASK_DEBUG
  - NODE_DEBUG: ''
  # 由 react-devtools-core 使用
  - EDITOR_URL: ''
  # 确定是否应使用多链 API 功能
  # 注意：设置此功能标志的构建的 manifest.json
  # 还必须包含一个 "externally_connectable" 条目，如下所示：
  # "externally_connectable": {
  #   "matches": ["http://*/*", "https://*/*"],
  #   "ids": ["*"]
  # }
  - MULTICHAIN_API: false
  # 确定是否启用链权限功能标志
  - CHAIN_PERMISSIONS: ''
  # 确定是否应显示投资组合视图 UI
  - PORTFOLIO_VIEW: 'true'
  # 启用测试燃气费流程以调试燃气费估算
  - TEST_GAS_FEE_FLOWS: false
  # 在发布前启用安全警报 API 的临时机制
  - SECURITY_ALERTS_API_ENABLED: 'true'
  # 用于验证 dApp 请求的安全警报 API 的 URL
  - SECURITY_ALERTS_API_URL: 'https://security-alerts.api.cx.metamask.io'
  # 用于验证 Etherscan 请求以避免速率限制的 API 密钥
  - ETHERSCAN_API_KEY: ''

  # 在构建中启用通知功能：
  - NOTIFICATIONS: ''

  # 如果运行单元测试，将定义此项
  - JEST_WORKER_ID: undefined

  - METAMASK_RAMP_API_CONTENT_BASE_URL: https://on-ramp-content.api.cx.metamask.io

  ###
  # 元变量
  ###

  # 使用 yaml 锚点来实现 DRY（不重复自己）- https://juju.is/docs/sdk/yaml-anchors-and-aliases
  - METAMASK_BUILD_TYPE_DEFAULT: *default
  # 将用于覆盖默认清单值的 JSON 文件的路径
  - MANIFEST_OVERRIDES: null

  ###
  # 账户抽象化 (EIP-4337)
  ###
  - EIP_4337_ENTRYPOINT: null

  ###
  # 启用/禁用 why did you render 调试工具：https://github.com/welldone-software/why-did-you-render
  # 这在生产环境中永远不应该启用，因为它会减慢 React 的速度
  ###
  - ENABLE_WHY_DID_YOU_RENDER: false

  ###
  # 依赖项中引用但未使用的环境变量
  # 未设置的环境变量会导致构建错误。这些设置为 `null` 是为了告诉我们的构建
  # 系统它们是有意未设置的。
  ###
  - ETHERSCAN_KEY: null # 由 `gridplus-sdk/dist/util.js` 使用

  ###
  # 用于验证在 LaunchDarkly 中设置的 EIP-7702 合约地址签名的公钥
  ###
  - EIP_7702_PUBLIC_KEY: '0x3c7a1cCCe462e96D186B8ca9a1BCB2010C3dABa3'

  # 交易中继 API 的 URL
  - TRANSACTION_RELAY_API_URL: null

  # DelegationManager 智能合约的地址
  - DELEGATION_MANAGER_ADDRESS: null

  # 用于无燃气 EIP-7702 交易的执行器地址
  - GASLESS_7702_ENFORCER_ADDRESS: null
